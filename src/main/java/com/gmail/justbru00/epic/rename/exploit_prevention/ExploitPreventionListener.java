package com.gmail.justbru00.epic.rename.exploit_prevention;

import java.util.Map.Entry;

import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.entity.HumanEntity;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.inventory.InventoryType;
import org.bukkit.inventory.ItemStack;

import com.gmail.justbru00.epic.rename.main.v3.Main;
import com.gmail.justbru00.epic.rename.utils.v3.Debug;
import com.gmail.justbru00.epic.rename.utils.v3.Messager;

public class ExploitPreventionListener implements Listener {
	
	private boolean grindstoneVersion = true;
	private boolean grindstoneVersionSet = false;
	
	/**
	 * ISSUE #114
	 * @param inventoryItems
	 * @return True if a glowing item is found. False if a glowing item is not found.
	 */
	public boolean checkForGlowingItems(ItemStack[] inventoryItems) {		
		for (ItemStack is : inventoryItems) {
			if (isGlowingItem(is)) {
				return true;
			}
		}
		return false;
	}
	/**
	 * ISSUE #114
	 * @param is
	 * @return Returns true if item is glowing. False if item is not glowing.
	 */
	public boolean isGlowingItem(ItemStack is) {
		if (is == null) {
			return false;
		}						
		for (Entry<Enchantment,Integer> enchantment : is.getEnchantments().entrySet()) {							
			if (enchantment.getKey().equals(Enchantment.LURE) || enchantment.getKey().equals(Enchantment.ARROW_INFINITE)) {
				if (enchantment.getValue() == 4341) {
					return true;
				}
			}
		}
		return false;
	}
	
	/**
	 * Checks if this version has the grindstone. MC 1.14 or greater
	 * @return True if this version has the grindstone. False if not.
	 */
	public boolean isMCVersionWithGrindstone() {
		if (grindstoneVersionSet) {
			return grindstoneVersion;
		}
		
		String version = Bukkit.getVersion();
		
		if (version.contains("1.7") || version.contains("1.8") || version.contains("1.9") 
				|| version.contains("1.10") || version.contains("1.11") || version.contains("1.12") || version.contains("1.13")) {
			grindstoneVersionSet = true;
			grindstoneVersion = false;
		} else {
			grindstoneVersionSet = true;
			grindstoneVersion = true;
		}
		return grindstoneVersion;
	}
	
	/**
	 * ISSUE #114
	 * @param e
	 */
	@EventHandler(priority=EventPriority.HIGHEST)
	public void onInventoryClick(InventoryClickEvent e) {		
		// Applies to MC 1.14 or higher
		if (isMCVersionWithGrindstone()) {			
			if (Main.getBooleanFromConfig("disable_grindstone_for_glowing_items")) {				
				if (e.getInventory() == null) {
					return;
				}
				
				if (e.getInventory().getType() == InventoryType.GRINDSTONE) {
					if (e.getCurrentItem() == null || e.getCurrentItem().getType().equals(Material.AIR)) {
						return;
					}
					if (isGlowingItem(e.getCurrentItem())) {
						// Glowing Item
						e.setCancelled(true);
						final HumanEntity eventPlayer = e.getWhoClicked();
						Bukkit.getScheduler().scheduleSyncDelayedTask(Main.getInstance(), new Runnable() {										
							@Override
							public void run() {		
								Debug.send("[ExploitPreventionListener] Item has glowing. Cancelled InventoryClickEvent");
								Messager.msgSenderWithConfigMsg("exploit_prevention.no_grindstone_with_glowing_items", eventPlayer);
							}
						}, 1);
					}
				}
			}
		}
	}
	
}
